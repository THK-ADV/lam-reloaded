package utils

import modules._
import play.api.ApplicationLoader.Context
import play.api.mvc.EssentialFilter
import play.api.routing.Router
import play.api.{Application, Logger, ApplicationLoader, BuiltInComponentsFromContext}
import router.Routes

class LwmApplicationLoader extends ApplicationLoader {
  def load(context: Context): Application = {
    //The workaround, this should happen automatically when I use the BuiltInComponents
    Logger.configure(context.environment)

    new DefaultLwmApplication(context).application
  }
}

abstract class LwmApplication(context: Context) extends BuiltInComponentsFromContext(context)
with ConfigurationModule
with BaseNamespace
with HomepageModule
with SemanticRepositoryModule
with DatabaseModule
with DbFolder
with DegreeManagementModulePostgres
with DegreeDaoModule
with CourseManagementModulePostgres
with CourseDaoModule
with GroupDaoManagementModule
with GroupManagementModule2
with LabworkManagementModulePostgres
with LabworkDaoModule
with RoomManagementModulePostgres
with RoomDaoModule
with SemesterManagementModulePostgres
with SemesterDaoModule
with SessionRepositoryModule
with RoleManagementModulePostgres
with RoleDaoModule
with AuthorityManagementModule2
with AuthorityDaoModule
with SessionControllerModule
with AkkaActorSystemModule
with LdapModule
with AssetsModule
with CORSFilterModule
with ApiDataModule
with LabworkApplicationManagementModulePostgres
with LabworkApplicationDaoModule
with ScheduleEntryDaoModule
with ScheduleEntryManagementModule2
with TimetableManagementModulePostgres
with TimetableDaoManagementModule
with ScheduleServiceManagementModule
with Blacklist2ManagementModule
with BlacklistDaoManagementModule
with BlacklistServiceModule
with ReportCardEntryDaoModule
with ReportCardEntryManagementModule2
with ReportCardEntryTypeDaoModule
with ReportCardEntryTypeManagementModule2
with ReportCardRescheduledDaoModule
with ReportCardRescheduledManagementModule
with ReportCardRetryDaoModule
with ReportCardRetryManagementModule
with AssignmentPlanManagementModulePostgres
with AssignmentPlanDaoModule
with UserManagementModulePostgres
with UserDaoModule
with ReportCardEvaluationDaoModule
with ReportCardEvaluationManagementModule2
with CronServiceModule {

  override lazy val httpFilters: Seq[EssentialFilter] = Seq(corsFilter(context.initialConfiguration))

  lazy val router: Router = new Routes(
    httpErrorHandler,
    homepageController,
    degreeManagementControllerPostgres,
    courseManagementControllerPostgres,
    groupManagementControllerPostgres,
    labworControllerPostgres,
    roomManagementControllerPostgres,
    semesterManagementControllerPostgres,
    roleManagementControllerPostgres,
    authorityControllerPostgres,
    labworkApplicationControllerPostgres,
    scheduleEntryControllerPostgres,
    timetableControllerPostgres,
    blacklistControllerPostgres,
    reportCardEntryControllerPostgres,
    reportCardEntryTypeController,
    reportCardRescheduledController,
    reportCardRetryController,
    reportCardEvaluationManagementController2,
    assignmentPlanManagementControllerPostgres,
    userControllerPostgres,
    sessionController,
    apiDataController,
    assetsController
  )
}

class DefaultLwmApplication(context: Context) extends LwmApplication(context)
with ConfigurationModuleImpl
with ConfigurableBaseNamespace
with DefaultSemanticRepositoryModuleImpl
with DefaultDatabaseModule
with DefaultHomepageModuleImpl
with DefaultDegreeManagementModuleImplPostgres
with DefaultDegreeDaoModule
with DefaultCourseManagementModuleImplPostgres
with DefaultCourseDaoModule
with DefaultGroupDaoManagementModule
with DefaultGroupManagementModule2
with DefaultLabworkManagementModulePostgres
with DefaultLabworkDaoModule
with DefaultRoomManagementModuleImplPostgres
with DefaultRoomDaoModule
with DefaultSemesterManagementModuleImplPostgres
with DefaultSemesterDaoModule
with LdapModuleImpl
with DefaultSessionRepositoryModuleImpl
with DefaultAssetsModuleImpl
with DefaultRoleManagementModulePostgres
with DefaultRoleDaoModule
with DefaultAuthorityManagementModule2
with DefaultAuthorityDaoModule
with DefaultSessionControllerModuleImpl
with DefaultCORSFilterModule
with DefaultApiDataModule
with DefaultLabworkApplicationManagementModulePostgres
with DefaultLabworkApplicationDaoModule
with DefaultScheduleEntryDaoModule
with DefaultScheduleEntryManagementModule2
with DefaultTimetableManagementModulePostgres
with DefaultTimetableDaoModule
with DefaultScheduleServiceManagementModule
with DefaultBlacklist2ManagementModule
with DefaultBlacklistDaoManagementModule
with DefaultBlacklistServiceModule
with DefaultReportCardEntryDaoModule
with DefaultReportCardEntryManagementModule2
with DefaultReportCardEntryTypeDaoModule
with DefaultReportCardEntryTypeManagementModule2
with DefaultReportCardRescheduledDaoModule
with DefaultReportCardRescheduledManagementModule
with DefaultReportCardRetryDaoModule
with DefaultReportCardRetryManagementModule
with DefaultAssignmentPlanManagementModuleImplPostgres
with DefaultAssignmentPlanDaoModule
with DefaultUserManagementModulePostgres
with DefaultUserDaoModule
with DefaultReportCardEvaluationDaoModule
with DefaultReportCardEvaluationManagementModule2
with DefaultDbFolderImpl
with DefaultCronServiceModule