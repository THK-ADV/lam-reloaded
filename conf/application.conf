# Play Core

play {
  i18n.langs = ["en"]
  http.secret.key = "WpP@1v@/ss/UDQ5XkG@depjlg?QcV4vzG@?1Pv[_:FqmnxFX:sGE`7C_>mn_BIl<"

  session {
    secure = true
    httpOnly = true
    domain = "localhost"
  }

  filters.cors {
    allowedOrigins = ["localhost", "gm.fh-koeln.de"]
    allowedHttpMethods = ["POST", "GET", "DELETE", "PUT"]
    allowedHttpHeaders = ["Authorization"]
    preflightMaxAge = 1 hour
  }

  filters.disabled += play.filters.csrf.CSRFFilter
  filters.enabled += play.filters.cors.CORSFilter
}

# LWM Settings (Custom)

lwm {
  backup {
    path = ""
    localTime = "" // needs to be ISO-8601 time formatted such as "13:37:00"
  }

  blacklist {
    year = "" // needs to be either "current" or "next". see `NaturalDescribableYear.apply` for more details
    localTime = ""
  }

  semester {
    year = "" // needs to be either "current" or "next". see `NaturalDescribableYear.apply` for more details
    localTime = ""
  }

  schedule {
    populations = 20
    generations = 100
    elites = 10
  }
}

# Database

database {
  dataSourceClass = org.postgresql.ds.PGSimpleDataSource
  connectionPool = HikariCP
  properties = {
    url = "jdbc:postgresql://localhost:5432/postgres"
    databaseName = ""
    password = ""
  }
  numThreads = 20 // The number of concurrent threads in the thread pool for asynchronous execution of database actions
  queueSize = 1000 // The size of the queue for database actions which cannot be executed immediately when all threads are busy
  connectionTimeout = 5000 // The maximum time (ms) to wait before a call to getConnection is timed out
  // keepAliveConnection = true // If this is set to true, one extra connection will be opened as soon as the database is accessed for the first time, and kept open until close() is called. This is useful for named in-memory databases in test environments.
}