# Routes
# This file defines all() application routes (Higher priority routes first)
# ~~~~

GET           /                                                                controllers.HomepageController.index

# Degree 
PUT           /degrees/:id                                                     controllers.DegreeControllerPostgres.update(id)
GET           /degrees                                                         controllers.DegreeControllerPostgres.all()
GET           /degrees/:id                                                     controllers.DegreeControllerPostgres.get(id)

# Course 
POST          /courses                                                         controllers.CourseControllerPostgres.create()
PUT           /courses/:id                                                     controllers.CourseControllerPostgres.update(id)
GET           /courses                                                         controllers.CourseControllerPostgres.all()
GET           /courses/:id                                                     controllers.CourseControllerPostgres.get(id)
DELETE        /courses/:id                                                     controllers.CourseControllerPostgres.delete(id)

# Group 2
GET           /courses/:c/labworks/:l/groups                                   controllers.GroupControllerPostgres.allFrom(c, l)
GET           /courses/:c/labworks/:l/groups/preview                           controllers.GroupControllerPostgres.preview(c, l)

# Labwork 
GET           /labworks/degrees/:degree                                        controllers.LabworkControllerPostgres.allWithDegree(degree)
GET           /labworks/:id                                                    controllers.LabworkControllerPostgres.get(id)

# Labwork restricted
POST          /courses/:course/labworks                                        controllers.LabworkControllerPostgres.createFrom(course)
PUT           /courses/:course/labworks/:id                                    controllers.LabworkControllerPostgres.updateFrom(course, id)
GET           /courses/:course/labworks                                        controllers.LabworkControllerPostgres.allFrom(course)
GET           /courses/:course/labworks/:id                                    controllers.LabworkControllerPostgres.getFrom(course, id)
DELETE        /courses/:course/labworks/:id                                    controllers.LabworkControllerPostgres.deleteFrom(course, id)

# Room
POST          /rooms                                                           controllers.RoomControllerPostgres.create()
PUT           /rooms/:id                                                       controllers.RoomControllerPostgres.update(id)
GET           /rooms                                                           controllers.RoomControllerPostgres.all()
GET           /rooms/:id                                                       controllers.RoomControllerPostgres.get(id)
DELETE        /rooms/:id                                                       controllers.RoomControllerPostgres.delete(id)

# Semester 
POST          /semesters                                                       controllers.SemesterControllerPostgres.create()
PUT           /semesters/:id                                                   controllers.SemesterControllerPostgres.update(id)
GET           /semesters                                                       controllers.SemesterControllerPostgres.all()
GET           /semesters/:id                                                   controllers.SemesterControllerPostgres.get(id)
DELETE        /semesters/:id                                                   controllers.SemesterControllerPostgres.delete(id)

# Role 
GET           /roles/:id                                                       controllers.RoleControllerPostgres.get(id)
GET           /roles                                                           controllers.RoleControllerPostgres.all()

# Authority 
POST          /authorities                                                     controllers.AuthorityControllerPostgres.create()
GET           /authorities                                                     controllers.AuthorityControllerPostgres.all()
GET           /authorities/:id                                                 controllers.AuthorityControllerPostgres.get(id)
DELETE        /authorities/:id                                                 controllers.AuthorityControllerPostgres.delete(id)

# LabworkApplications 
POST          /labworkApplications                                             controllers.LabworkApplicationControllerPostgres.create()
PUT           /labworkApplications/:id                                         controllers.LabworkApplicationControllerPostgres.update(id)
GET           /labworkApplications                                             controllers.LabworkApplicationControllerPostgres.all()
GET           /labworkApplications/:id                                         controllers.LabworkApplicationControllerPostgres.get(id)
DELETE        /labworkApplications/:id                                         controllers.LabworkApplicationControllerPostgres.delete(id)

# Schedule / ScheduleEntries 
POST          /courses/:c/scheduleEntries                                      controllers.ScheduleEntryControllerPostgres.createFrom(c)
GET           /courses/:c/labworks/:l/scheduleEntries/preview                  controllers.ScheduleEntryControllerPostgres.preview(c, l)

GET           /courses/:c/scheduleEntries                                      controllers.ScheduleEntryControllerPostgres.allFrom(c)
GET           /courses/:c/labworks/:l/scheduleEntries                          controllers.ScheduleEntryControllerPostgres.allFromLabwork(c, l)
GET           /courses/:c/scheduleEntries/:id                                  controllers.ScheduleEntryControllerPostgres.getFrom(c, id)
PUT           /courses/:c/scheduleEntries/:id                                  controllers.ScheduleEntryControllerPostgres.updateFrom(c, id)
DELETE        /courses/:c/labworks/:l/scheduleEntries                          controllers.ScheduleEntryControllerPostgres.deleteFrom(c, l)

# Timetable restricted

POST          /courses/:c/timetables                                           controllers.TimetableControllerPostgres.createFrom(c)
PUT           /courses/:c/timetables/:id                                       controllers.TimetableControllerPostgres.updateFrom(c, id)
GET           /courses/:c/timetables                                           controllers.TimetableControllerPostgres.allFrom(c)
GET           /courses/:c/timetables/:id                                       controllers.TimetableControllerPostgres.getFrom(c, id)
DELETE        /courses/:c/timetables/:id                                       controllers.TimetableControllerPostgres.deleteFrom(c, id)

# Blacklist 
POST          /blacklists                                                      controllers.BlacklistControllerPostgres.create()
POST          /blacklists/year/:year                                           controllers.BlacklistControllerPostgres.createFor(year)
PUT           /blacklists/:id                                                  controllers.BlacklistControllerPostgres.update(id)
GET           /blacklists                                                      controllers.BlacklistControllerPostgres.all()
GET           /blacklists/year/:year                                           controllers.BlacklistControllerPostgres.preview(year)
GET           /blacklists/:id                                                  controllers.BlacklistControllerPostgres.get(id)
DELETE        /blacklists/:id                                                  controllers.BlacklistControllerPostgres.delete(id)

# ReportCardEntry 
GET           /reportCardEntries/student/:s                                    controllers.ReportCardEntryControllerPostgres.getForStudent(s)

POST          /courses/:c/labworks/:l/reportCardEntries                        controllers.ReportCardEntryControllerPostgres.createFrom(c, l)
POST          /courses/:c/reportCardEntries/copy                               controllers.ReportCardEntryControllerPostgres.createByCopy(c)

GET           /courses/:c/reportCardEntries                                    controllers.ReportCardEntryControllerPostgres.allFrom(c)
GET           /courses/:c/scheduleEntries/:s/reportCardEntries                 controllers.ReportCardEntryControllerPostgres.allFromScheduleEntry(c, s)

# ReportCardEntryType 
PUT           /courses/:c/reportCardEntryTypes/:id                             controllers.ReportCardEntryTypeControllerPostgres.updateFrom(c, id)

# ReportCardRescheduled 
POST          /courses/:c/reportCardReschedules                                controllers.ReportCardRescheduledController.createFrom(c)
GET           /courses/:c/reportCardReschedules                                controllers.ReportCardRescheduledController.allFrom(c)
GET           /courses/:c/reportCardReschedules/:id                            controllers.ReportCardRescheduledController.getFrom(c, id)
PUT           /courses/:c/reportCardReschedules/:id                            controllers.ReportCardRescheduledController.updateFrom(c, id)
DELETE        /courses/:c/reportCardReschedules/:id                            controllers.ReportCardRescheduledController.deleteFrom(c, id)

# ReportCardRetry 
POST          /courses/:c/reportCardRetries                                    controllers.ReportCardRetryController.createFrom(c)
GET           /courses/:c/reportCardRetries                                    controllers.ReportCardRetryController.allFrom(c)
GET           /courses/:c/reportCardRetries/:id                                controllers.ReportCardRetryController.getFrom(c, id)
PUT           /courses/:c/reportCardRetries/:id                                controllers.ReportCardRetryController.updateFrom(c, id)
DELETE        /courses/:c/reportCardRetries/:id                                controllers.ReportCardRetryController.deleteFrom(c, id)

# ReportCardEvaluation 
GET           /reportCardEvaluations/student/:s                                controllers.ReportCardEvaluationControllerPostgres.get(s)

# ReportCardEvaluation restricted
POST          /courses/:c/labworks/:l/reportCardEvaluations                    controllers.ReportCardEvaluationControllerPostgres.createFrom(c, l)
POST          /courses/:c/labworks/:l/students/:s/reportCardEvaluations        controllers.ReportCardEvaluationControllerPostgres.createForStudent(c, l, s)
GET           /courses/:c/labworks/:l/reportCardEvaluations                    controllers.ReportCardEvaluationControllerPostgres.allFrom(c, l)
GET           /courses/:c/labworks/:l/reportCardEvaluations/preview            controllers.ReportCardEvaluationControllerPostgres.preview(c, l)
PUT           /courses/:c/labworks/:l/reportCardEvaluations/:id                controllers.ReportCardEvaluationControllerPostgres.updateFrom(c, l, id)
DELETE        /courses/:c/labworks/:l/reportCardEvaluations                    controllers.ReportCardEvaluationControllerPostgres.deleteFromLabwork(c, l)
DELETE        /courses/:c/labworks/:l/students/:s/reportCardEvaluations        controllers.ReportCardEvaluationControllerPostgres.deleteFromStudent(c, l, s)

# ReportCardEvaluationPattern 
POST          /courses/:c/reportCardEvaluationPatterns                         controllers.ReportCardEvaluationPatternController.createFrom(c)
GET           /courses/:c/reportCardEvaluationPatterns                         controllers.ReportCardEvaluationPatternController.allFrom(c)
GET           /courses/:c/reportCardEvaluationPatterns/:id                     controllers.ReportCardEvaluationPatternController.getFrom(c, id)
PUT           /courses/:c/reportCardEvaluationPatterns/:id                     controllers.ReportCardEvaluationPatternController.updateFrom(c, id)
DELETE        /courses/:c/reportCardEvaluationPatterns/:id                     controllers.ReportCardEvaluationPatternController.deleteFrom(c, id)

# AssignmentPlan 
POST          /courses/:course/assignmentPlans                                 controllers.AssignmentPlanControllerPostgres.createFrom(course)
PUT           /courses/:course/assignmentPlans/:id                             controllers.AssignmentPlanControllerPostgres.updateFrom(course, id)
GET           /courses/:course/assignmentPlans                                 controllers.AssignmentPlanControllerPostgres.allFrom(course)
GET           /courses/:course/assignmentPlans/:id                             controllers.AssignmentPlanControllerPostgres.getFrom(course, id)
DELETE        /courses/:course/assignmentPlans/:id                             controllers.AssignmentPlanControllerPostgres.deleteFrom(course, id)

# Users 
# POST          /users                                                           controllers.UserControllerPostgres.create()
GET           /users                                                           controllers.UserControllerPostgres.all()
GET           /labworks/:labwork/users/:user/buddies/:buddy                    controllers.UserControllerPostgres.buddy(labwork, user, buddy)
GET           /users/:id                                                       controllers.UserControllerPostgres.get(id)

# Dashboard
GET           /dashboards                                                      controllers.DashboardController.dashboard()
GET           /dashboards/:id                                                  controllers.DashboardController.dashboardFor(id)

# Map static resources from the /public folder to the /assets URL path
GET           /assets/*file                                                    controllers.Assets.at(path="/public", file)